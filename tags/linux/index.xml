<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on nodejh</title>
    <link>http://nodejh.com/tags/linux/index.xml</link>
    <description>Recent content in Linux on nodejh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="http://nodejh.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Linux Users And Groups</title>
      <link>http://nodejh.com/post/Linux-Users-And-Groups/</link>
      <pubDate>Fri, 23 Jan 2015 20:33:29 +0800</pubDate>
      
      <guid>http://nodejh.com/post/Linux-Users-And-Groups/</guid>
      <description>

&lt;p&gt;Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。&lt;/p&gt;

&lt;p&gt;用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。&lt;/p&gt;

&lt;p&gt;每个用户账号都拥有一个惟一的用户名和各自的口令。&lt;/p&gt;

&lt;p&gt;用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。&lt;/p&gt;

&lt;p&gt;关于用户账号的管理，主要有以下几大方面：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;用户管理。&lt;/li&gt;
&lt;li&gt;用户组管理。&lt;/li&gt;
&lt;li&gt;用户账号相关系统文件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-用户管理&#34;&gt;1. 用户管理&lt;/h2&gt;

&lt;h3 id=&#34;1-1-添加用户&#34;&gt;1.1. 添加用户&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;useradd 选项 用户名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参数说明：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;选项：

&lt;ul&gt;
&lt;li&gt;-c comment 指定一段注释性描述。&lt;/li&gt;
&lt;li&gt;-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。&lt;/li&gt;
&lt;li&gt;-g 用户组 指定用户所属的用户组。&lt;/li&gt;
&lt;li&gt;-G 用户组，用户组 指定用户所属的附加组。&lt;/li&gt;
&lt;li&gt;-s Shell文件 指定用户的登录Shell。默认的是 &lt;code&gt;/bin/bash&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;用户名：指定新账号的登录名。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;实例1&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# useradd -d /home/jh -m jh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令创建了一个用户 &lt;code&gt;jh&lt;/code&gt;，其中 &lt;code&gt;-d&lt;/code&gt; 和 &lt;code&gt;-m&lt;/code&gt; 选项用来为用户 &lt;code&gt;jh&lt;/code&gt; 创建一个主目录 &lt;code&gt;/home/jh&lt;/code&gt;，用户登录服务器之后，就处于该目录。&lt;/p&gt;

&lt;p&gt;创建用户时，如果没有给用户指定用户组，则会自动创建一个同名的用户组。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实例2&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# useradd -s /bin/sh -g group -G admin,root nodejh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令新建了一个用户 &lt;code&gt;nodejh&lt;/code&gt;，该用户的登录 Shell 是 &lt;code&gt;/bin/sh&lt;/code&gt;，它属于 &lt;code&gt;group&lt;/code&gt; 用户组，同时又属于 &lt;code&gt;adm&lt;/code&gt; 和 &lt;code&gt;root&lt;/code&gt; 用户组，其中 &lt;code&gt;group&lt;/code&gt; 用户组是其主组。&lt;/p&gt;

&lt;p&gt;这里可能新建组：&lt;code&gt;groupadd group&lt;/code&gt; 及 &lt;code&gt;groupadd admin&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;增加用户账号就是在 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件中为新用户增加一条记录，同时更新其他系统文件如 &lt;code&gt;/etc/shadow&lt;/code&gt;、 &lt;code&gt;/etc/group&lt;/code&gt; 等。&lt;/p&gt;

&lt;h3 id=&#34;1-2-删除用户&#34;&gt;1.2. 删除用户&lt;/h3&gt;

&lt;p&gt;如果一个用户的账号不再使用，可以从系统中删除。删除用户账号就是要将/etc/passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。&lt;/p&gt;

&lt;p&gt;删除一个已有的用户账号使用userdel命令，其格式如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;userdel 选项 用户名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;常用的选项是-r，它的作用是把用户的主目录一起删除。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# userdel jh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令删除用户 &lt;code&gt;jh&lt;/code&gt; 在系统文件中（主要是 &lt;code&gt;/etc/passwd&lt;/code&gt;、&lt;code&gt;/etc/shadow&lt;/code&gt;、&lt;code&gt;/etc/group&lt;/code&gt; 等）的记录，同时删除用户的主目录。&lt;/p&gt;

&lt;h3 id=&#34;1-3-修改账户&#34;&gt;1.3 修改账户&lt;/h3&gt;

&lt;p&gt;修改用户账号就是根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录Shell等。&lt;/p&gt;

&lt;p&gt;修改已有用户的信息使用 &lt;code&gt;usermod&lt;/code&gt; 命令，其格式如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;usermod 选项 用户名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;常用的选项包括 &lt;code&gt;-c, -d, -m, -g, -G, -s, -u&lt;/code&gt; 等，这些选项的意义与 &lt;code&gt;useradd&lt;/code&gt; 命令中的选项一样，可以为用户指定新的资源值。&lt;/p&gt;

&lt;p&gt;另外，有些系统可以使用选项：&lt;code&gt;-l 新用户名&lt;/code&gt;。这个选项指定一个新的账号，即将原来的用户名改为新的用户名。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# usermod -s /bin/ksh -d /home/jh1 –g developer jh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令将用户 &lt;code&gt;jh&lt;/code&gt; 的登录 Shell 修改为 &lt;code&gt;ksh&lt;/code&gt;，主目录改为 &lt;code&gt;/home/jh&lt;/code&gt;，用户组改为&lt;code&gt;developer&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;1-4-用户口令管理&#34;&gt;1.4 用户口令管理&lt;/h3&gt;

&lt;p&gt;用户管理的一项重要内容是用户口令的管理。用户账号刚创建时没有口令，但是被系统锁定，无法使用，必须为其指定口令后才可以使用，即使是指定空口令。&lt;/p&gt;

&lt;p&gt;指定和修改用户口令的 Shell 命令是 &lt;code&gt;passwd&lt;/code&gt;。超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。命令的格式为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;passwd 选项 用户名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可使用的选项：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-l 锁定口令，即禁用账号。&lt;/li&gt;
&lt;li&gt;-u 口令解锁。&lt;/li&gt;
&lt;li&gt;-d 使账号无口令。&lt;/li&gt;
&lt;li&gt;-f 强迫用户下次登录时修改口令。&lt;/li&gt;
&lt;li&gt;
如果默认用户名，则修改当前用户的口令。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如，假设当前用户是 &lt;code&gt;jh&lt;/code&gt;，则下面的命令修改该用户自己的口令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ passwd
Old password:****** 
New password:******* 
Re-enter new password:*******
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果是超级用户，可以用下列形式指定任何用户的口令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# passwd jh
New password:******* 
Re-enter new password:*******
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;普通用户修改自己的口令时，`passwd 命令会先询问原口令，验证后再要求用户输入两遍新口令，如果两次输入的口令一致，则将这个口令指定给用户；而超级用户为用户指定口令时，就不需要知道原口令。&lt;/p&gt;

&lt;p&gt;为了系统安全起见，用户应该选择比较复杂的口令，例如最好使用8位长的口令，口令中包含有大写、小写字母和数字，并且应该与姓名、生日等不相同。&lt;/p&gt;

&lt;p&gt;为用户指定空口令时，执行下列形式的命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# passwd -d jh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令将用户 &lt;code&gt;jh&lt;/code&gt; 的口令删除，这样用户 &lt;code&gt;jh&lt;/code&gt;  下一次登录时，系统就不再询问口令。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;passwd&lt;/code&gt; 命令还可以用 &lt;code&gt;-l(lock)&lt;/code&gt; 选项锁定某一用户，使其不能登录，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# passwd -l jh
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-用户组的管理&#34;&gt;2. 用户组的管理&lt;/h2&gt;

&lt;p&gt;每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如 Linux 下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。&lt;/p&gt;

&lt;p&gt;用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新。&lt;/p&gt;

&lt;h3 id=&#34;2-1-添加用户组&#34;&gt;2.1 添加用户组&lt;/h3&gt;

&lt;p&gt;添加用户组使用 &lt;code&gt;groupadd&lt;/code&gt; 命令，其基本格式如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;groupadd 选项 用户组
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以使用的选项有：
+ -g GID 指定新用户组的组标识号（GID）。
+ -o 一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实例1&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# groupadd group1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令向系统中增加了一个新组 &lt;code&gt;group1&lt;/code&gt;，新组的组标识号是在当前已有的最大组标识号的基础上加 1。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实例2&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# groupadd -g 1001 group2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令向系统中增加了一个新组 &lt;code&gt;group2&lt;/code&gt;，同时指定新组的组标识号是 1001。&lt;/p&gt;

&lt;h3 id=&#34;2-2-删除用户组&#34;&gt;2.2 删除用户组&lt;/h3&gt;

&lt;p&gt;如果要删除一个已有的用户组，使用 &lt;code&gt;groupdel&lt;/code&gt; 命令，其格式如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;groupdel 用户组
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# groupdel group1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令从系统中删除组group1。&lt;/p&gt;

&lt;h3 id=&#34;2-3-修改用户组&#34;&gt;2.3 修改用户组&lt;/h3&gt;

&lt;p&gt;修改用户组的属性使用 &lt;code&gt;groupmod&lt;/code&gt; 命令。其语法如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;groupmod 选项 用户组
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;常用的选项有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-g GID 为用户组指定新的组标识号。&lt;/li&gt;
&lt;li&gt;-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。&lt;/li&gt;
&lt;li&gt;-n 新用户组 将用户组的名字改为新名字&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;实例1&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# groupmod -g 102 group2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令将组group2的组标识号修改为102。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实例2&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# groupmod –g 10000 -n group3 group2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令将组 &lt;code&gt;group2&lt;/code&gt; 的标识号改为 &lt;code&gt;10000&lt;/code&gt;，组名修改为 &lt;code&gt;group3&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;2-4-切换用户组&#34;&gt;2.4 切换用户组&lt;/h3&gt;

&lt;p&gt;如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。&lt;/p&gt;

&lt;p&gt;用户可以在登录后，使用命令 &lt;code&gt;newgrp&lt;/code&gt; 切换到其他用户组，这个命令的参数就是目的用户组。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ newgrp root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这条命令将当前用户切换到 &lt;code&gt;root&lt;/code&gt; 用户组，前提条件是 &lt;code&gt;root&lt;/code&gt; 用户组确实是该用户的主组或附加组。&lt;/p&gt;

&lt;h2 id=&#34;3-用户账号相关系统文件&#34;&gt;3. 用户账号相关系统文件&lt;/h2&gt;

&lt;p&gt;完成用户管理的工作有许多种方法，但是每一种方法实际上都是对有关的系统文件进行修改。
与用户和用户组相关的信息都存放在一些系统文件中，这些文件包括 &lt;code&gt;/etc/passwd&lt;/code&gt;、&lt;code&gt;/etc/shadow&lt;/code&gt;、 &lt;code&gt;/etc/group&lt;/code&gt; 等。&lt;/p&gt;

&lt;p&gt;下面分别介绍这些文件的内容。&lt;/p&gt;

&lt;h3 id=&#34;3-1-etc-passwd&#34;&gt;3.1 &lt;code&gt;/etc/passwd&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Linux系统中的每个用户都在 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件中有一个对应的记录行，它记录了这个用户的一些基本属性。&lt;/p&gt;

&lt;p&gt;这个文件对所有用户都是可读的。它的内容类似下面的例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cat /etc/passwd
dnsmasq:x:109:65534:dnsmasq,,,:/var/lib/misc:/bin/false
sshd:x:110:65534::/var/run/sshd:/usr/sbin/nologin
pollinate:x:111:1::/var/cache/pollinate:/bin/false
ntp:x:112:115::/home/ntp:/bin/false
jh:x:1000:1000::/home/jh:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从上面的例子我们可以看到，&lt;code&gt;/etc/passwd&lt;/code&gt; 中一行记录对应着一个用户，每行记录又被冒号(:)分隔为7个字段，其格式和具体含义如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;用户名:口令:用户编号:用户组编号:用户注释信息:用户主目录:shell类型
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;用户名&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;是代表用户账号的字符串。通常长度不超过8个字符，并且由大小写字母和/或数字组成。登录名中不能有冒号(:)，因为冒号在这里是分隔符。为了兼容起见，登录名中最好不要包含点字符(.)，并且不使用连字符(-)和加号(+)打头。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;口令&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;虽然这个字段存放的只是用户口令的加密串，不是明文，但是由于 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件对所有用户都可读，所以这仍是一个安全隐患。因此，现在许多 Linux 系统（如SVR4）都使用了 shadow 技术，把真正的加密后的用户口令字存放到 &lt;code&gt;/etc/shadow&lt;/code&gt; 文件中，而在 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件的口令字段中只存放一个特殊的字符，例如 &lt;code&gt;x&lt;/code&gt; 或者 &lt;code&gt;*&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用户编号&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用户编号是一个整数，系统内部用它来标识用户。&lt;/p&gt;

&lt;p&gt;般情况下它与用户名是一一对应的。如果几个用户名对应的用户标识号是一样的，系统内部将把它们视为同一个用户，但是它们可以有不同的口令、不同的主目录以及不同的登录 Shell 等。
通常用户标识号的取值范围是 &lt;code&gt;0～65 535&lt;/code&gt;。&lt;code&gt;0&lt;/code&gt; 是超级用户 &lt;code&gt;root&lt;/code&gt; 的标识号，&lt;code&gt;1～99&lt;/code&gt; 由系统保留，作为管理账号，普通用户的标识号从 &lt;code&gt;100&lt;/code&gt; 开始。在Linux系统中，这个界限是&lt;code&gt;500&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用户组编号&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用户组编号字段记录的是用户所属的用户组。它对应着 &lt;code&gt;/etc/group&lt;/code&gt; 文件中的一条记录。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用户注释信息&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;例如用户的真实姓名、电话、地址等，这个字段并没有什么实际的用途。在不同的 Linux 系统中，这个字段的格式并没有统一。在许多 Linux 系统中，这个字段存放的是一段任意的注释性描述文字，用做 &lt;code&gt;finger&lt;/code&gt; 命令的输出。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用户主目录&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;它是用户在登录到系统之后所处的目录。在大多数系统中，各用户的主目录都被组织在同一个特定的目录下，而用户主目录的名称就是该用户的登录名。各用户对自己的主目录有读、写、执行（搜索）权限，其他用户对此目录的访问权限则根据具体情况设置。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;shell类型&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即 Shell。&lt;/p&gt;

&lt;p&gt;Shell 是用户与 Linux 系统之间的接口。Linux 的 Shell 有许多种，每种都有不同的特点。常用的有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sh(Bourne Shell)&lt;/li&gt;
&lt;li&gt;csh(C Shell)&lt;/li&gt;
&lt;li&gt;ksh(Korn Shell)&lt;/li&gt;
&lt;li&gt;tcsh(TENEX/TOPS-20 type C Shell)&lt;/li&gt;
&lt;li&gt;bash(Bourne Again Shell)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;系统管理员可以根据系统情况和用户习惯为用户指定某个 Shell。如果不指定 Shell，那么系统使用 &lt;code&gt;sh&lt;/code&gt; 为默认的登录 Shell，即这个字段的值为 &lt;code&gt;/bin/sh&lt;/code&gt;。而 &lt;code&gt;/bin/sh&lt;/code&gt; 一般链接到 &lt;code&gt;/bin/dash&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;用户的登录 Shell 也可以指定为某个特定的程序（此程序不是一个命令解释器）。&lt;/p&gt;

&lt;p&gt;利用这一特点，我们可以限制用户只能运行指定的应用程序，在该应用程序运行结束后，用户就自动退出了系统。有些Linux 系统要求只有那些在系统中登记了的程序才能出现在这个字段中。&lt;/p&gt;

&lt;h3 id=&#34;3-2-etc-shadow&#34;&gt;3.2 &lt;code&gt;/etc/shadow&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; 中的记录行与 &lt;code&gt;/etc/passwd&lt;/code&gt; 中的一一对应，它由 &lt;code&gt;pwconv&lt;/code&gt; 命令根据 &lt;code&gt;/etc/passwd&lt;/code&gt; 中的数据自动产生。&lt;/p&gt;

&lt;p&gt;它的文件格式与 &lt;code&gt;/etc/passwd&lt;/code&gt; 类似，由若干个字段组成，字段之间用 &lt;code&gt;:&lt;/code&gt; 隔开。这些字段是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;登录名 是与 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件中的登录名相一致的用户账号&lt;/li&gt;
&lt;li&gt;口令 字段存放的是加密后的用户口令字，长度为13个字符。如果为空，则对应用户没有口令，登录时不需要口令；如果含有不属于集合 &lt;code&gt;{ ./0-9A-Za-z }&lt;/code&gt; 中的字符，则对应的用户不能登录。&lt;/li&gt;
&lt;li&gt;最后一次修改时间 表示的是从某个时刻起，到用户最后一次修改口令时的天数。时间起点对不同的系统可能不一样。例如在 SCO Linux 中，这个时间起点是1970年1月1日。&lt;/li&gt;
&lt;li&gt;最小时间间隔 指的是两次修改口令之间所需的最小天数。&lt;/li&gt;
&lt;li&gt;最大时间间隔 指的是口令保持有效的最大天数。&lt;/li&gt;
&lt;li&gt;警告时间 字段表示的是从系统开始警告用户到用户密码正式失效之间的天数。&lt;/li&gt;
&lt;li&gt;不活动时间 表示的是用户没有登录活动但账号仍能保持有效的最大天数。&lt;/li&gt;
&lt;li&gt;失效时间 字段给出的是一个绝对的天数，如果使用了这个字段，那么就给出相应账号的生存期。期满后，该账号就不再是一个合法的账号，也就不能再用来登录了。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-3-etc-group&#34;&gt;3.3 &lt;code&gt;/etc/group&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;用户组的所有信息都存放在 &lt;code&gt;/etc/group&lt;/code&gt; 文件中。&lt;/p&gt;

&lt;p&gt;用户分组是Linux 系统中对用户进行管理及控制访问权限的一种手段。&lt;/p&gt;

&lt;p&gt;每个用户都属于某个用户组；一个组中可以有多个用户，一个用户也可以属于不同的组。&lt;/p&gt;

&lt;p&gt;当一个用户同时是多个组中的成员时，在 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件中记录的是用户所属的主组，也就是登录时所属的默认组，而其他组称为附加组。&lt;/p&gt;

&lt;p&gt;用户要访问属于附加组的文件时，必须首先使用 &lt;code&gt;newgrp&lt;/code&gt; 命令使自己成为所要访问的组中的成员。
用户组的所有信息都存放在 &lt;code&gt;/etc/group&lt;/code&gt; 文件中。此文件的格式也类似于 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件，由冒号 &lt;code&gt;:&lt;/code&gt; 隔开若干个字段，这些字段有：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;组名:口令:组标识号:组内用户列表
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;组名 是用户组的名称，由字母或数字构成。与 &lt;code&gt;/etc/passwd&lt;/code&gt; 中的登录名一样，组名不应重复。&lt;/li&gt;
&lt;li&gt;口令 字段存放的是用户组加密后的口令字。一般 Linux 系统的用户组都没有口令，即这个字段一般为空，或者是 &lt;code&gt;*&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;组标识号 与用户标识号类似，也是一个整数，被系统内部用来标识组。&lt;/li&gt;
&lt;li&gt;组内用户列表 是属于这个组的所有用户的列表，不同用户之间用逗号 &lt;code&gt;,&lt;/code&gt; 分隔。这个用户组可能是用户的主组，也可能是附加组。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;4-伪用户-psuedo-users&#34;&gt;4. 伪用户 psuedo users&lt;/h2&gt;

&lt;p&gt;统中有一类用户称为伪用户（psuedo users）。&lt;/p&gt;

&lt;p&gt;这些用户在 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件中也占有一条记录，但是不能登录，因为它们的登录Shell为空。它们的存在主要是方便系统管理，满足相应的系统进程对文件属主的要求。&lt;/p&gt;

&lt;p&gt;常见的伪用户如下所示：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;bin 拥有可执行的用户命令文件&lt;/li&gt;
&lt;li&gt;sys 拥有系统文件&lt;/li&gt;
&lt;li&gt;adm 拥有帐户文件&lt;/li&gt;
&lt;li&gt;uucp UUCP使用&lt;/li&gt;
&lt;li&gt;lp lp或lpd子系统使用&lt;/li&gt;
&lt;li&gt;nobody NFS使用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;除了上面列出的伪用户外，还有许多标准的伪用户，例如：&lt;code&gt;audit&lt;/code&gt;、&lt;code&gt;cron&lt;/code&gt;、&lt;code&gt;mail&lt;/code&gt; &lt;code&gt;usenet&lt;/code&gt; 等，它们也都各自为相关的进程和文件所需要。&lt;/p&gt;

&lt;h2 id=&#34;5-添加批量用户&#34;&gt;5. 添加批量用户&lt;/h2&gt;

&lt;p&gt;添加和删除用户对每位 Linux 系统管理员都是轻而易举的事，比较棘手的是如果要添加几十个、上百个甚至上千个用户时，我们不太可能还使用 &lt;code&gt;useradd&lt;/code&gt; 一个一个地添加，必然要找一种简便的创建大量用户的方法。Linux系统提供了创建大量用户的工具，可以让您立即创建大量用户，方法如下：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a) 先编辑一个文本用户文件&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;每一列按照 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件的格式书写，要注意每个用户的用户名、UID、宿主目录都不可以相同，其中密码栏可以留做空白或输入 &lt;code&gt;x&lt;/code&gt; 号。一个范例文件 user.txt 内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;user001::600:100:user:/home/user001:/bin/bash
user002::601:100:user:/home/user002:/bin/bash
user003::602:100:user:/home/user003:/bin/bash
user004::603:100:user:/home/user004:/bin/bash
user005::604:100:user:/home/user005:/bin/bash
user006::605:100:user:/home/user006:/bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;b) 导入用户&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;以 &lt;code&gt;root&lt;/code&gt; 身份执行命令 &lt;code&gt;/usr/sbin/newusers&lt;/code&gt;，从刚创建的用户文件user.txt中导入数据，创建用户：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# newusers &amp;lt; user.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后可以执行 &lt;code&gt;cat /etc/passwd&lt;/code&gt; 等命令检查 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件是否已经出现这些用户的数据，并且用户的宿主目录是否已经创建。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;c) 解码密码&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;将 &lt;code&gt;/etc/shadow&lt;/code&gt; 产生的 shadow 密码解码，然后回写到 &lt;code&gt;/etc/passwd&lt;/code&gt; 中，并将 &lt;code&gt;/etc/shadow&lt;/code&gt; 的shadow密码栏删掉。这是为了方便下一步的密码转换工作，即先取消 shadow password 功能。&lt;/p&gt;

&lt;p&gt;执行命令 &lt;code&gt;/usr/sbin/pwunconv&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pwunconv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;d) 编辑密码文件&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;编辑每个用户的密码对照文件，范例文件 passwd.txt 内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;user001:密码
user002:密码
user003:密码
user004:密码
user005:密码
user006:密码
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;e) 创建用户密码&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;创建用户密码，&lt;code&gt;chpasswd&lt;/code&gt; 会将经过 &lt;code&gt;/usr/bin/passwd&lt;/code&gt; 命令编码过的密码写入 &lt;code&gt;/etc/passwd&lt;/code&gt; 的密码栏。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chpasswd &amp;lt; passwd.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;f) 编码密码&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;确定密码经编码写入 &lt;code&gt;/etc/passwd&lt;/code&gt; 的密码栏后，执行命令 &lt;code&gt;/usr/sbin/pwconv&lt;/code&gt; 将密码编码为 &lt;code&gt;shadow password&lt;/code&gt;，并将结果写入 &lt;code&gt;/etc/shadow&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pwconv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就完成了大量用户的创建了，之后就可以到 &lt;code&gt;/home&lt;/code&gt; 下检查这些用户宿主目录的权限设置是否都正确，并登录验证用户密码是否正确。&lt;/p&gt;

&lt;h2 id=&#34;6-赋予用户-root-权限&#34;&gt;6. 赋予用户 root 权限&lt;/h2&gt;

&lt;p&gt;如果普通用户不在 &lt;code&gt;/etc/sudoers&lt;/code&gt; 文件中，则使用 &lt;code&gt;sudo&lt;/code&gt; 命令的时候就会报错，如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install git
jh is not in the sudoers file.  This incident will be reported.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首先看看 &lt;code&gt;/etc/suders&lt;/code&gt; 文件的内容，里面有如下几行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# User privilege specification
root	ALL=(ALL:ALL) ALL

# Members of the admin group may gain root privileges
%admin ALL=(ALL) ALL

# Allow members of group sudo to execute any command
%sudo	ALL=(ALL:ALL) ALL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中，&lt;code&gt;root    ALL=(ALL) ALL&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;root&lt;/code&gt; 表示被授权的用户，这里是 root 用户。&lt;/li&gt;
&lt;li&gt;第一个ALL表示所有计算机。&lt;/li&gt;
&lt;li&gt;第二个ALL表示所有用户。&lt;/li&gt;
&lt;li&gt;第三个ALL表示所有命令。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;全句的意思是：授权根用户在所有计算机上以所有用户的身份运行所有文件。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;%admin ALL=(ALL) ALL&lt;/code&gt; 同上面一样，只不过被授权的成了 &lt;code&gt;admin&lt;/code&gt; 这个组。&lt;/p&gt;

&lt;p&gt;所以在 &lt;code&gt;root   ALL=(ALL:ALL) ALL&lt;/code&gt; 下面加一行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jh ALL=(ALL:ALL) ALL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后 &lt;code&gt;jh&lt;/code&gt; 用户登录后，使用 &lt;code&gt;sudo&lt;/code&gt; 就可以获得 root 权限了。&lt;/p&gt;

&lt;p&gt;当然，在其他两个地方添加类似的内容，也是可以的。&lt;/p&gt;

&lt;h2 id=&#34;7-其他&#34;&gt;7. 其他&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;whoami 查看当前用户&lt;/li&gt;
&lt;li&gt;id users 查看用户编号及用户组编号&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>