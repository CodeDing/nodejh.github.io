<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on nodejh</title>
    <link>http://nodejh.com/categories/mysql/index.xml</link>
    <description>Recent content in Mysql on nodejh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="http://nodejh.com/categories/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Create and Manage MySQL User</title>
      <link>http://nodejh.com/post/Create-and-Manage-MySQL-User/</link>
      <pubDate>Tue, 12 Apr 2016 02:40:03 +0800</pubDate>
      
      <guid>http://nodejh.com/post/Create-and-Manage-MySQL-User/</guid>
      <description>&lt;h3 id=&#34;一-创建数据库用户&#34;&gt;一.创建数据库用户&lt;/h3&gt;

&lt;p&gt;首先用root账号进入MySQL：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后输入密码即可。&lt;/p&gt;

&lt;p&gt;创建数据库并设置编码为 &lt;code&gt;utf8&lt;/code&gt;，不然中文可能会乱码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; create database mydb default character set utf8 defa
ult collate utf8_general_ci;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建用户有两种方式&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.&amp;gt; create user username@hostname identified by &#39;yourpassword&#39;;

2.&amp;gt; insert into mysql.user(host,user,password) value(&#39;hostname&#39;,&#39;username&#39;,password(&#39;yourpassword&#39;));
  &amp;gt; flush privileges;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;说明：
username：即将创建的用户名;
hostname：主机名。主机名为localhost表示用户可以本地登录；主机名为 % 表示远程访问，该用户可以从任意远程主机登陆。
yourpassword:该用户密码。如果密码为空，则该用户可不通过密码直接登录服务器。密码为空也可以直接写为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; &amp;gt; create user &#39;username&#39;@&#39;hostname&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;flsu privileges:刷新权限。
方法1设置后不需刷新权限即可生效；方法2需要刷新权限才能生效。&lt;/p&gt;

&lt;p&gt;例：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; &amp;gt; create user test@localhost identified by &#39;testpasswd&#39;;
 &amp;gt; create user test@&#39;%&#39; identified by &#39;testpasswd&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建一个用户名为test的用户，并设置其本地访问和远程访问。注意通配符 % 需要加引号。&lt;/p&gt;

&lt;h3 id=&#34;二-查看已有用户&#34;&gt;二.查看已有用户&lt;/h3&gt;

&lt;p&gt;查看用户名，主机名，密码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; select user,host,password from mysql.user;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;三-删除已有用户&#34;&gt;三.删除已有用户&lt;/h3&gt;

&lt;p&gt;删除也有两种方式。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.&amp;gt; drop user username@hostname;
2.&amp;gt; delete from mysql.user where user=&#39;usrname&#39; and host=&#39;hostname&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：如果未指定主机名，则 drop user username 默认删除username@&amp;lsquo;%&amp;lsquo;；如果没有 username@&amp;rsquo;%&amp;lsquo;,则会提示 ERROR 1396 (HY000) 的错误。&lt;/p&gt;

&lt;h3 id=&#34;四-设置修改用户密码&#34;&gt;四.设置修改用户密码&lt;/h3&gt;

&lt;p&gt;同样有两种方式。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.&amp;gt; set password for username@&#39;hostname&#39; = password(&#39;newpassword&#39;);
2.&amp;gt; update mysql.user password=password(&#39;newpassword&#39;) where user=&#39;username&#39; and host=&#39;hostname&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样，方法一不需要刷新即可生效；方法2需要刷新才能生效。&lt;/p&gt;

&lt;h3 id=&#34;五-为用户分配数据库及数据库表的权限&#34;&gt;五.为用户分配数据库及数据库表的权限&lt;/h3&gt;

&lt;p&gt;MySQL给用户分配数据库（表）权限的命令可概括为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grant 权限 on 数据库对象 to 用户
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;1-分配某个数据库的所有权限&#34;&gt;1.分配某个数据库的所有权限&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; grant all privileges on db.* to username@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;表示将数据库db中所有表的所有权限赋予用户username，通配符 % 表示可远程访问。&lt;/p&gt;

&lt;h5 id=&#34;2-分配数据库中一个表的所有权限&#34;&gt;2.分配数据库中一个表的所有权限&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; grant all privileges on db.table to username@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;表示将数据库db中的table表的所有权限赋予用户username。&lt;/p&gt;

&lt;h5 id=&#34;3-分配创建-修改-删除-mysql-数据表结构权限&#34;&gt;3.分配创建、修改、删除 MySQL 数据表结构权限。&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; grant create on db.* to username@&#39;%&#39;;
&amp;gt; grant alter  on db.* to username@&#39;%&#39;;
&amp;gt; grant drop   on db.* to username@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;操作 MySQL 外键权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; grant references on db.* to username@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;操作 MySQL 临时表权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; grant create temporary tables on db.* to username@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;操作 MySQL 索引权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; grant index on db.* to username@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;操作 MySQL 视图、查看视图源代码 权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; grant create view on db.* to username@&#39;%&#39;;
&amp;gt; grant show view on db.* to username@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;操作 MySQL 存储过程、函数 权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; grant create routine on db.* to username@&#39;%&#39;; -- now, can show procedure status
&amp;gt; grant alter routine on db.* to username@&#39;%&#39;; -- now, you can drop a procedure
&amp;gt; grant execute on db.* to username@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;六-查看用户权限&#34;&gt;六.查看用户权限&lt;/h3&gt;

&lt;p&gt;查看当前用户权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; show grants;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看其它用户权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; show grants for username@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;七-撤销已经赋予给-mysql-用户权限的权限&#34;&gt;七.撤销已经赋予给 MySQL 用户权限的权限。&lt;/h3&gt;

&lt;p&gt;revoke 与 grant 的语法类似，只需要把关键字 “to” 换成 “from” 即可：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; grant all on *.* to username@&#39;%&#39;;
&amp;gt; revoke all on *.* from username@&#39;%&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;八-mysql-grant-revoke-用户权限注意事项&#34;&gt;八.MySQL grant,revoke 用户权限注意事项&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;grant, revoke 用户权限后，该用户只有重新连接 MySQL 数据库，权限才能生效。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如果想让授权的用户，也可以将这些权限 grant 给其他用户，需要选项 “grant option“&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;grant select on db.* to username@localhost with grant option;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这个特性一般用不到。实际中，数据库权限最好由 管理员 来统一管理。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Github Issue: &lt;a href=&#34;https://github.com/nodejh/nodejh.github.io/issues/7&#34;&gt;https://github.com/nodejh/nodejh.github.io/issues/7&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>